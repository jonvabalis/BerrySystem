// <auto-generated />
using System;
using BerrySystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BerrySystem.Infrastructure.Migrations
{
    [DbContext(typeof(BerrySystemDbContext))]
    [Migration("20250619160348_Added_Password_Field_For_Employee")]
    partial class Added_Password_Field_For_Employee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BerrySystem.Domain.Entities.BerryKind", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BerryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BerryTypeId");

                    b.ToTable("BerryKinds");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.BerryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BerryTypes");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.Cost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.Harvest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BerryKindId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BerryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Kilograms")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BerryKindId");

                    b.HasIndex("BerryTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BerryKindId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BerryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Kilograms")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("PricePerKilo")
                        .HasColumnType("float");

                    b.Property<int>("SaleType")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BerryKindId");

                    b.HasIndex("BerryTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.BerryKind", b =>
                {
                    b.HasOne("BerrySystem.Domain.Entities.BerryType", "BerryType")
                        .WithMany("BerryKinds")
                        .HasForeignKey("BerryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BerryType");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.Harvest", b =>
                {
                    b.HasOne("BerrySystem.Domain.Entities.BerryKind", "BerryKind")
                        .WithMany()
                        .HasForeignKey("BerryKindId");

                    b.HasOne("BerrySystem.Domain.Entities.BerryType", "BerryType")
                        .WithMany()
                        .HasForeignKey("BerryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BerrySystem.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BerryKind");

                    b.Navigation("BerryType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.Sale", b =>
                {
                    b.HasOne("BerrySystem.Domain.Entities.BerryKind", "BerryKind")
                        .WithMany()
                        .HasForeignKey("BerryKindId");

                    b.HasOne("BerrySystem.Domain.Entities.BerryType", "BerryType")
                        .WithMany()
                        .HasForeignKey("BerryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BerrySystem.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BerryKind");

                    b.Navigation("BerryType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BerrySystem.Domain.Entities.BerryType", b =>
                {
                    b.Navigation("BerryKinds");
                });
#pragma warning restore 612, 618
        }
    }
}
